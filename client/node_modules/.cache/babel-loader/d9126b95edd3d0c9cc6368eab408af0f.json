{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code Document\\\\Top5Lists_HW4\\\\Top5Lists_HW4\\\\client\\\\src\\\\components\\\\Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n\n  function handleDragStart(event, targetId) {\n    event.dataTransfer.setData(\"item\", targetId);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    console.log(\"entering\");\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    console.log(\"leaving\");\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event, targetId) {\n    event.preventDefault();\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false);\n    console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\"); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let index = event.target.id.substring(\"list-\".length);\n      let text = event.target.value;\n      store.addUpdateItemTransaction(index - 1, text);\n      toggleEdit();\n    }\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  let editStatus = false;\n\n  if (store.isItemEditActive) {\n    editStatus = true;\n  }\n\n  let {\n    index\n  } = props;\n\n  if (editActive) {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"item-\" + (index + 1),\n      className: \"top5-item\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      defaultValue: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  } else {\n    let itemClass = \"top5-item\";\n\n    if (draggedTo) {\n      itemClass = \"top5-item-dragged-to\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      id: 'item-' + (index + 1),\n      className: itemClass,\n      onDragStart: event => {\n        handleDragStart(event, index + 1);\n      },\n      onDragOver: event => {\n        handleDragOver(event, index + 1);\n      },\n      onDragEnter: event => {\n        handleDragEnter(event, index + 1);\n      },\n      onDragLeave: event => {\n        handleDragLeave(event, index + 1);\n      },\n      onDrop: event => {\n        handleDrop(event, index + 1);\n      },\n      draggable: \"true\",\n      sx: {\n        display: 'flex',\n        p: 1\n      },\n      style: {\n        fontSize: '48pt',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: editStatus,\n        type: \"button\",\n        id: \"edit-item-\" + index + 1,\n        className: \"list-card-button\",\n        onClick: handleToggleEdit,\n        value: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"edit\",\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            style: {\n              fontSize: '48pt'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1,\n          flexGrow: 1\n        },\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, props.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Top5Item, \"SQy1P3BHgaYOrETCNJaYXPLC8ro=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["D:/VS Code Document/Top5Lists_HW4/Top5Lists_HW4/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","TextField","Box","ListItem","IconButton","EditIcon","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","handleDragStart","event","targetId","dataTransfer","setData","handleDragOver","preventDefault","handleDragEnter","console","log","handleDragLeave","handleDrop","sourceId","getData","substring","indexOf","addMoveItemTransaction","handleKeyPress","code","index","target","id","length","text","value","addUpdateItemTransaction","toggleEdit","handleToggleEdit","stopPropagation","newActive","setIsItemEditActive","editStatus","isItemEditActive","itemClass","display","p","fontSize","width","flexGrow","key"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\r\nimport { GlobalStoreContext } from '../store'\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Top5Item(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [editActive, setEditActive] = useState(false);\r\n    const [draggedTo, setDraggedTo] = useState(0);\r\n\r\n    function handleDragStart(event, targetId) {\r\n        event.dataTransfer.setData(\"item\", targetId);\r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n        console.log(\"entering\");\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n        console.log(\"leaving\");\r\n        setDraggedTo(false);\r\n    }\r\n\r\n    function handleDrop(event, targetId) {\r\n        event.preventDefault();\r\n        let sourceId = event.dataTransfer.getData(\"item\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        setDraggedTo(false);\r\n\r\n        console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\");\r\n\r\n        // UPDATE THE LIST\r\n        store.addMoveItemTransaction(sourceId, targetId);\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        if (event.code === \"Enter\") {\r\n            let index = event.target.id.substring(\"list-\".length);\r\n            let text = event.target.value;\r\n            store.addUpdateItemTransaction(index-1, text);\r\n            toggleEdit();\r\n        }\r\n    }\r\n\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsItemEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n\r\n    let editStatus = false;\r\n    if (store.isItemEditActive) {\r\n        editStatus = true;\r\n    }\r\n    let { index } = props;\r\n\r\n    if (editActive) {\r\n        return (\r\n            <input\r\n                id={\"item-\" + (index+1)}\r\n                className='top5-item'\r\n                type='text'\r\n                onKeyPress={handleKeyPress}\r\n                defaultValue={props.text}\r\n            />)\r\n    }\r\n    else {\r\n\r\n    let itemClass = \"top5-item\";\r\n    if (draggedTo) {\r\n        itemClass = \"top5-item-dragged-to\";\r\n    }\r\n\r\n    return (\r\n            <ListItem\r\n                id={'item-' + (index+1)}\r\n                key={props.key}\r\n                className={itemClass}\r\n                onDragStart={(event) => {\r\n                    handleDragStart(event, (index+1))\r\n                }}\r\n                onDragOver={(event) => {\r\n                    handleDragOver(event, (index+1))\r\n                }}\r\n                onDragEnter={(event) => {\r\n                    handleDragEnter(event, (index+1))\r\n                }}\r\n                onDragLeave={(event) => {\r\n                    handleDragLeave(event, (index+1))\r\n                }}\r\n                onDrop={(event) => {\r\n                    handleDrop(event, (index+1))\r\n                }}\r\n                draggable=\"true\"\r\n                sx={{ display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '48pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n            <input\r\n                disabled={editStatus}\r\n                type=\"button\"\r\n                id={\"edit-item-\" + index+1}\r\n                className=\"list-card-button\"\r\n                onClick={handleToggleEdit}\r\n                value={\"\\u270E\"}\r\n            />\r\n            <Box sx={{ p: 1 }}>\r\n                <IconButton aria-label='edit'>\r\n                    <EditIcon style={{fontSize:'48pt'}}  />\r\n                </IconButton>\r\n            </Box>\r\n                <Box sx={{ p: 1, flexGrow: 1 }}>{props.text}</Box>\r\n            </ListItem>\r\n    )}\r\n}\r\n\r\nexport default Top5Item;\r\n"]},"metadata":{},"sourceType":"module"}